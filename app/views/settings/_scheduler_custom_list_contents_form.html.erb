<% @content = SchedulerCustomListContent.new %>
<%= form_for @content,
             :url => {:controller => 'scheduler_custom_list_contents',
                      :action => 'create' },
             :remote => true do |form| %>
  <%= form.text_field :name, title: '表示名' %>
  <%= form.submit '追加', :class => "scheduler_custom_submit", :id => "scheduler_custom_list_contents" %>
<% end %>

<script type="text/javascript">
  $("#scheduler_custom_list_contents").live("click", function(event){
    var _target_form = $($(this).parents("form")[0]);
    var _input_text = _target_form.find("#scheduler_custom_list_content_name").val();
    var csrf_token = $("meta[name=csrf-token]").attr("content");
    var url = _target_form.attr("action");
    var post_data = "name=" + _input_text;

    $.ajax({
      type: "POST",
      headers: {
        "X-CSRF-TOKEN": csrf_token
      },
      url: url,
      data: post_data,
      dataType: "html",
      success: function(d) {
        // Refactoring: I want to use rails function(remote: true and render partial)
        //              This form is generated Redmine original form. so, override url if own form write.
        //              I write catch click event and override form, so response and rewrite needs own self instead of rails function.
        eval(d);
      },
      error: function(xhr, status, error) {
        console.log(status);
      }
    });
    return false;
  });
</script>